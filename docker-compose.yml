# Docker Compose para Brayamsac Backend
# Configuración para desarrollo local y testing

version: '3.8'

services:
  # Servicio principal de la aplicación
  brayamsac-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: brayamsac-backend
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - PORT=3000
      - DB_HOST=mysql
      - DB_USER=brayamsac_user
      - DB_PASSWORD=brayamsac_password_2024
      - DB_NAME=brayamsac_asistencias
      - DB_PORT=3306
      - DB_SSL=false
      - JWT_SECRET=your-super-secret-jwt-key-change-in-production
      - FRONTEND_URL=http://localhost:5173
      - LOG_LEVEL=debug
      - MYSQL_CONNECTION_LIMIT=5
    volumes:
      - ./src:/app/src:ro
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./scripts:/app/scripts:ro
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - brayamsac-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health/simple"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # Base de datos MySQL
  mysql:
    image: mysql:8.0
    container_name: brayamsac-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    environment:
      - MYSQL_ROOT_PASSWORD=root_password_2024
      - MYSQL_DATABASE=brayamsac_asistencias
      - MYSQL_USER=brayamsac_user
      - MYSQL_PASSWORD=brayamsac_password_2024
      - MYSQL_CHARACTER_SET_SERVER=utf8mb4
      - MYSQL_COLLATION_SERVER=utf8mb4_unicode_ci
    volumes:
      - mysql_data:/var/lib/mysql
      - ./database/init:/docker-entrypoint-initdb.d:ro
      - ./database/backups:/backups
    command: >
      --default-authentication-plugin=mysql_native_password
      --character-set-server=utf8mb4
      --collation-server=utf8mb4_unicode_ci
      --innodb-buffer-pool-size=256M
      --max-connections=100
      --query-cache-type=1
      --query-cache-size=64M
      --slow-query-log=1
      --slow-query-log-file=/var/log/mysql/slow.log
      --long-query-time=2
    networks:
      - brayamsac-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Redis para caché y sesiones (opcional)
  redis:
    image: redis:7-alpine
    container_name: brayamsac-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass redis_password_2024
    volumes:
      - redis_data:/data
    networks:
      - brayamsac-network
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx como reverse proxy (opcional para testing)
  nginx:
    image: nginx:alpine
    container_name: brayamsac-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/conf.d:/etc/nginx/conf.d:ro
      - ./logs/nginx:/var/log/nginx
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - brayamsac-backend
    networks:
      - brayamsac-network
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Adminer para administración de base de datos (solo desarrollo)
  adminer:
    image: adminer:latest
    container_name: brayamsac-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
      - ADMINER_DESIGN=pepa-linha
    depends_on:
      - mysql
    networks:
      - brayamsac-network
    profiles:
      - dev

  # Monitoring con Prometheus (opcional)
  prometheus:
    image: prom/prometheus:latest
    container_name: brayamsac-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - brayamsac-network
    profiles:
      - monitoring

  # Grafana para visualización (opcional)
  grafana:
    image: grafana/grafana:latest
    container_name: brayamsac-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    depends_on:
      - prometheus
    networks:
      - brayamsac-network
    profiles:
      - monitoring

# Volúmenes persistentes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

# Red personalizada
networks:
  brayamsac-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16